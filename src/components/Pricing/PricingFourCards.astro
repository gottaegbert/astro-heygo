---
/**
 * * pricing sections with toggle for monthly or yearly payments
 * This is designed for 3 pricing items, but can be modified to support more
 */

import { Icon } from "astro-icon/components";
import { getRelativeLocaleUrl } from "astro:i18n";

// components
import Button from "@components/Button/Button.astro";
import { Switch } from "@components/starwind/switch";

// utils
import { getLocaleFromUrl } from "@js/localeUtils";
import { useTranslations } from "@js/translationUtils";

interface pricingItem {
	name: string; // plan name
	description: string; // plan description
	featured?: boolean; // if true, will be highlighted or otherwise featured
	price: {
		custom?: boolean; // if true, will show "contact us" instead of price
		monthly?: number; // monthly price if paid by month
		yearly?: number; // monthly price if paid by year
	};
	features: string[]; // list of features
	href: string; // button link to sign up or other page
	linkText: string; // text for the button
}

// This is designed for 3 pricing items, but can be modified to support more
const pricingData: pricingItem[] = [
	{
		name: "Basic",
		description: "Essential features for beginners. Get started with ease",
		price: {
			monthly: 29,
			yearly: 19,
		},
		features: ["Basic Features", "1 user", "2 GB Free Access", "Limited Support"],
		href: "/signup",
		linkText: "Get Started",
	},
	{
		name: "Professional",
		description: "Perfect for solo professionals. Unlock advanced features",
		featured: true,
		price: {
			monthly: 49,
			yearly: 39,
		},
		features: ["Pro features", "Up to 10 users", "50 GB Free Access", "Priority support"],
		href: "/signup",
		linkText: "Get Started",
	},
	{
		name: "Enterprise",
		description: "Scale your business faster. Comprehensive plan",
		price: {
			monthly: 99,
			yearly: 79,
		},
		features: ["Pro features", "Unlimited Users", "200 GB Free Access", "Premium Support"],
		href: "/signup",
		linkText: "Get Started",
	},
	{
		name: "Contact Us",
		description: "For bespoke solutions tailored to your business needs",
		price: {
			custom: true,
		},
		features: ["White Glove Onboarding", "All Features", "unlimited Users", "Dedicated support"],
		href: "/contact",
		linkText: "Contact Us",
	},
];

const currLocale = getLocaleFromUrl(Astro.url);
const t = useTranslations(currLocale);
---

<section id="pricing-four-cards" class="py-16 md:py-20">
	<div class="relative mx-auto max-w-7xl px-4">
		<div class="flex justify-center">
			<!-- <Badge>Pricing</Badge> -->
		</div>
		<div class="flex justify-center">
			<h2 class="h2 inline text-center">A plan for every business</h2>
		</div>

		<!-- Toggle switch for monthly or yearly pricing -->
		<div class="mt-6 flex justify-center">
			<label
				for="pricing-four-cards__toggle"
				class="relative inline-flex cursor-pointer items-center gap-4 select-none"
			>
				<span class="description flex items-center">Monthly</span>
				<Switch id="pricing-four-cards__toggle" variant="primary" padding={4} />
				<span class="description flex items-center">Yearly</span>
			</label>
		</div>

		<!-- works for 3 pricing plans, adjust grid cols here to support more or less -->
		<div class="mx-auto mt-16 grid w-full gap-6 sm:grid-cols-2 md:mt-20 lg:grid-cols-4">
			{
				pricingData.map((plan) => (
					<div class="pricing-plan w-full">
						<div
							class="bg-base-100 dark:bg-base-950 relative flex h-full flex-col justify-between rounded-xl border p-8 text-center"
							class:list={[
								{
									"border-primary-300 before:absolute before:inset-0.5 before:-z-10 before:rounded-xl before:bg-blue-500 before:blur":
										plan.featured === true,
								},
								{
									"border-base-200 dark:border-base-800": plan.featured !== true,
								},
							]}
						>
							<div class="">
								<h3
									class="mb-8 text-lg font-medium tracking-tight"
									class:list={[
										{
											"text-primary-600 dark:text-primary-400": plan.featured === true,
										},
										{
											"text-base-800 dark:text-base-300": plan.featured !== true,
										},
									]}
								>
									{plan.name}
								</h3>
								{plan.price.custom === true ? (
									// if custom price, show "Custom" instead of price
									<>
										<h4>
											<span class="text-4xl font-medium tracking-tight">Custom</span>
										</h4>
										<span
											aria-hidden="true"
											class="description invisible inline-block tracking-tight"
										>
											per user, per month
										</span>
									</>
								) : (
									<>
										<div class="pricing-monthly">
											<h4 class="text-4xl font-medium tracking-tight">
												${plan.price.monthly} / mo
											</h4>
											<span class="description inline-block text-sm tracking-tight">
												(paid monthly)
											</span>
										</div>
										<div class="pricing-yearly hidden">
											<h4 class="text-4xl font-medium tracking-tight">${plan.price.yearly} / mo</h4>
											<span class="description inline-block text-sm tracking-tight">
												(paid yearly)
											</span>
										</div>
									</>
								)}

								<div class="border-base-200 dark:border-base-800 mt-8 border-y py-8">
									<p
										class="description mx-auto max-w-xs tracking-tight"
										class:list={[
											{
												"text-base-800 dark:text-base-300": plan.featured === true,
											},
										]}
									>
										{plan.description}
									</p>
								</div>
								<ul class="py-8">
									{plan.features.map((feature) => (
										<li class="mb-2.5 flex flex-wrap items-center gap-3">
											<Icon
												name="tabler/check"
												class="text-primary-600 dark:text-primary-400 size-5"
												aria-hidden="true"
											/>
											<span
												class="font-medium tracking-tight"
												class:list={[
													{
														"text-base-800 dark:text-base-300": plan.featured !== true,
													},
												]}
											>
												{feature}
											</span>
										</li>
									))}
								</ul>
							</div>
							<Button
								class="mb-0"
								variant={plan.featured === true ? "primary" : "outline"}
								href={getRelativeLocaleUrl(currLocale, plan.href)}
							>
								{plan.linkText}
							</Button>
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>

<script>
	import type { SwitchChangeEvent } from "@/components/starwind/switch";

	function pricingPlanToggleSetup() {
		const pricingSection = document.getElementById("pricing-four-cards");
		const toggle = pricingSection?.querySelector("#pricing-four-cards__toggle");
		const monthlyPrices = pricingSection?.querySelectorAll(".pricing-monthly");
		const yearlyPrices = pricingSection?.querySelectorAll(".pricing-yearly");

		if (!toggle || !monthlyPrices || !yearlyPrices) return;

		toggle.addEventListener("starwind-switch:change", (e: Event) => {
			const event = e as SwitchChangeEvent;
			const isYearly = event.detail.checked;

			monthlyPrices.forEach((price) => price.classList.toggle("hidden", isYearly));
			yearlyPrices.forEach((price) => price.classList.toggle("hidden", !isYearly));
		});
	}

	// runs on initial page load
	pricingPlanToggleSetup();

	// runs on view transitions navigation
	document.addEventListener("astro:after-swap", pricingPlanToggleSetup);
</script>
